# Python Function App to Linux on Azure
# Build a Python function app and deploy it to Azure as a Linux function app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python
# The build should only run when a PR is opened ONLY from staging to production branch
# Build deploy should happen only after the PR is merged into production branch

trigger:
  - production

pr:
  branches:
    include:
      - staging

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'xxxxxxxxxxxx'

  # Function app name
  functionAppName: 'function-app-prod'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Working Directory
  workingDirectory: '$(System.DefaultWorkingDirectory)/'

stages:
  - template: build-stage.yml

  - stage: Deploy
    displayName: Deploy stage
    dependsOn: Build
    condition: and(succeeded(), eq(variables['build.SourceBranchName'], 'production'))

    jobs:
      - deployment: Deploy
        displayName: Deploy
        environment: 'production'
        pool:
          vmImage: $(vmImageName)

        strategy:
          runOnce:
            deploy:

              steps:
                - task: AzureFunctionApp@1
                  displayName: 'Azure functions app deploy'
                  inputs:
                    azureSubscription: '$(azureSubscription)'
                    appType: functionAppLinux
                    appName: $(functionAppName)
                    package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
