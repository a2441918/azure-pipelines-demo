# Python Function App to Linux on Azure
# Build a Python function app and deploy it to Azure as a Linux function app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python
# This should run on when any PR is created, except when a PR is created from staging -> production branch
# Build should only be deployed after PR is merged into staging branch. The staging build is to be deployed into staging server.

trigger:
  - staging

pr:
  branches:
    include:
      - '*'
    exclude:
      - production

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'xxxxxxxxxxxxx'

  # Function app name
  functionAppName: 'function-app'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Working Directory
  workingDirectory: '$(System.DefaultWorkingDirectory)/'

stages:
  - template: build-stage.yml

  - stage: Deploy
    displayName: Deploy stage
    dependsOn: Build
    condition: and(succeeded(), eq(variables['build.SourceBranchName'], 'staging'))

    jobs:
    - deployment: Deploy
      displayName: Deploy
      environment: 'development'
      pool:
        vmImage: $(vmImageName)

      strategy:
        runOnce:
          deploy:

            steps:
            - task: AzureFunctionApp@1
              displayName: 'Azure functions app deploy'
              inputs:
                azureSubscription: '$(azureSubscription)'
                appType: functionAppLinux
                appName: $(functionAppName)
                package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
